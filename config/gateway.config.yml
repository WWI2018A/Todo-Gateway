http:
  port: 8080
admin:
  port: 9876
  host: localhost
apiEndpoints:
  profile:
    host: localhost
    paths: '/api/v1/profiles*'
  auth:
    host: localhost
    paths: '/api/v1/auth*'
  todo:
    host: '*'
    paths: /api/v1/todos*
  ui: 
    host: '0f1e94dc-2f46-44c5-8aba-b4cc2da9bfb5.ma.bw-cloud-instance.org'
    paths: '/api/v1/'
serviceEndpoints:
  profile_service:
    url: 'http://localhost:4000/'
  auth_service:
    url: 'http://localhost:4000/'
  todo_service:
    url: '193.196.54.70:8080/'
  ui_service: 
    url: '0f1e94dc-2f46-44c5-8aba-b4cc2da9bfb5.ma.bw-cloud-instance.org:4000/'
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - rewrite
  - jwt
  - request-transformer
  - keycloak-protect
pipelines:
  profile_pipe:
    apiEndpoints:
      - profile
    policies:
        - rewrite:           
          -
            condition:
              name: regexpmatch
              match: ^/api/v1/?(.*)$
            action:
              rewrite: /$1
        - log: 
            action: 
              message: 'profiles ${req.method}'
        - keycloak-protect:
        - expression:
          - action:
              jscode: 'req.headers["x-uid"] = req.kauth.grant.access_token.content.email;'          
        - proxy:
          - action:
              serviceEndpoint: profile_service
              changeOrigin: false
  auth_pipe:
    apiEndpoints:
      - auth
    policies:
        - rewrite:           
          -
            condition:
              name: regexpmatch
              match: ^/api/v1/?(.*)$
            action:
              rewrite: /$1
        - log: 
            action: 
              message: 'auth ${req.method}'
        - expression:
          - action:
              jscode: 'req.headers["x-uid"] = req.kauth.grant.access_token.content.email;' 
        - proxy:
          - action:
              serviceEndpoint: auth_service
              changeOrigin: false
  todo_pipe:
    apiEndpoints:
      - todo
    policies:
        - rewrite:           
          -
            condition:
              name: regexpmatch
              match: ^/api/v1/?(.*)$
            action:
              rewrite: /$1
        - log: 
            action: 
              message: 'todos ${req.method}'
        #- keycloak-protect:
        - expression:
          - action:
              jscode: 'req.headers["x-uid"] = "user-ffb7c974-342b-4e58-8d9c-768fe5718ff5"'
              #req.kauth.grant.access_token.content.email;' 
        - proxy:
          - action:
              serviceEndpoint: todo_service
              changeOrigin: false
    ui_pipe:
      apiEndpoints:
        - ui
      policies:
        - log:
          action:
            message: 'ui ${req.method}'
        - expression:
          - action:
              jscode: 'res.send('Hey')'
        - proxy:
          - action:
              serviceEnpoint: ui_service 
              changeOrigin: false 
