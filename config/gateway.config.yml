http:
  port: 3000
admin:
  port: 9876
  host: localhost
apiEndpoints:
  profile:
    host: localhost
    paths: '/api/v1/profiles*'
  auth:
    host: localhost
    paths: '/api/v1/auth*'
  todo:
    host: localhost
    paths: '/api/v1/todos*'
serviceEndpoints:
  profile_service:
    url: 'http://localhost:4000/'
  auth_service:
    url: 'http://localhost:4000/'
  todo_service:
    url: 'http://localhost:4000/'
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - rewrite
  - jwt
  - request-transformer
  - keycloak-protect
pipelines:
  profile_pipe:
    apiEndpoints:
      - profile
    policies:
        - rewrite:           
          -
            condition:
              name: regexpmatch
              match: ^/api/v1/?(.*)$
            action:
              rewrite: /$1
        - log: 
            action: 
              message: 'profiles ${req.method}'
        - request-transformer: 
            action:
              headers:
                add:
                  #x-uid: req.cemail
        - keycloak-protect:
        - proxy:
          - action:
              serviceEndpoint: profile_service
              changeOrigin: false
  auth_pipe:
    apiEndpoints:
      - auth
    policies:
        - rewrite:           
          -
            condition:
              name: regexpmatch
              match: ^/api/v1/?(.*)$
            action:
              rewrite: /$1
        - log: 
            action: 
              message: 'auth ${req.method}'
        - request-transformer: 
            action:
              body:
                add:
                  user: req.user
        - proxy:
          - action:
              serviceEndpoint: auth_service
              changeOrigin: false
  todo_pipe:
    apiEndpoints:
      - todo
    policies:
        - rewrite:           
          -
            condition:
              name: regexpmatch
              match: ^/api/v1/?(.*)$
            action:
              rewrite: /$1
        - log: 
            action: 
              message: 'todos ${req.method}'
        - keycloak-protect:
        - request-transformer: 
            action:
              body:
                add:
                  user: req.user
        - proxy:
          - action:
              serviceEndpoint: todo_service
              changeOrigin: false