http:
  port: 3000
admin:
  port: 9876
  host: localhost
apiEndpoints:
  profile:
    host: '*'
    paths: '/api/v1/profiles*'
  todo:
    host: '*'
    paths: '/api/v1/todos*'    
  auth:
    host: '*'
    paths: '/api/v1/auth*'
  frontend:
    host: '*'
    paths: '*'
serviceEndpoints:
  profile_service:
    url: 'http://193.196.54.93:3000/'
  todo_service:
    url: 'http://193.196.54.70:8080/'
  auth_service:
    url: 'http://193.196.54.85:8080/'
  frontend_service:
    url: 'http://193.196.53.255:3000/'
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - rewrite
  - jwt
  - request-transformer
  - keycloak-protect
pipelines:
  profile_pipe:
    apiEndpoints:
      - profile
    policies:
        - cors:
          -
            action:
              origin: '*'
              methods: 'HEAD,PUT,PATCH,POST,DELETE'
              preflightContinue: true
              optionsSuccessStatus: 204
              credentials: true
        - rewrite:         
          -
            condition:
              name: regexpmatch
              match: ^/api/v1/?(.*)$
            action:
              rewrite: /$1
        - log: 
            action: 
              message: 'profiles ${req.method}'
        - keycloak-protect:
        - expression:
          - action:
              jscode: 'req.headers["x-uid"] = req.kauth.grant.access_token.content.email;' 
        - proxy:
          - action:
              serviceEndpoint: profile_service
              changeOrigin: false
  todo_pipe:
    apiEndpoints:
      - todo
    policies:
        - cors:
          -
            action:
              origin: '*'
              methods: 'HEAD,PUT,PATCH,POST,DELETE'
              preflightContinue: true
              optionsSuccessStatus: 204
              credentials: true
        - rewrite:
          -
            condition:
              name: regexpmatch
              match: ^/api/v1/?(.*)$
            action:
              rewrite: /$1
        - log: 
            action: 
              message: 'todos ${req.method}'
        - keycloak-protect:
        - expression:
          - action:
              jscode: 'req.headers["x-uid"] = req.kauth.grant.access_token.content.email'
        - proxy:
          - action:
              serviceEndpoint: todo_service
              changeOrigin: false
  auth_pipe:
    apiEndpoints:
      - auth
    policies:
        - cors:
          -
            action:
              origin: '*'
              methods: 'HEAD,PUT,PATCH,POST,DELETE'
              preflightContinue: true
              optionsSuccessStatus: 204
              credentials: true
        - rewrite:
          -
            condition:
              name: regexpmatch
              match: ^/api/v1/?(.*)$
            action:
              rewrite: /$1
        - log: 
            action: 
              message: 'auth ${req.method}'
        - proxy:
          - action:
              serviceEndpoint: auth_service
              changeOrigin: false
  frontend_pipe:
    apiEndpoints:
      - frontend
    policies:
      - cors:
        -
          action:
            origin: '*'
            methods: 'HEAD,PUT,PATCH,POST,DELETE'
            preflightContinue: true
            optionsSuccessStatus: 204
            credentials: true
      - log: 
          action: 
            message: 'frontend ${req.method}'
      - proxy:
        - action:
            serviceEndpoint: frontend_service
            changeOrigin: false
